#ifndef ZIP_INTERFACE_DEF_H
#define ZIP_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.23.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_ZIP_H
#include <libraries/zip.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct ZipIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct ZipIFace *Self);
	uint32 APICALL (*Release)(struct ZipIFace *Self);
	APTR Expunge_UNIMPLEMENTED;
	APTR Clone_UNIMPLEMENTED;
	zip_int32_t APICALL (*zip_archive_set_tempdir)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR tempdir);
	zip_int32_t APICALL (*zip_close)(struct ZipIFace *Self, zip_t * za);
	zip_int32_t APICALL (*zip_delete)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx);
	zip_int64_t APICALL (*zip_dir_add)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR name, zip_flags_t flags);
	void APICALL (*zip_discard)(struct ZipIFace *Self, zip_t * za);
	void APICALL (*zip_error_clear)(struct ZipIFace *Self, zip_t * za);
	void APICALL (*zip_error_get)(struct ZipIFace *Self, zip_t * za, zip_int32_t * zep, zip_int32_t * sep);
	zip_int32_t APICALL (*zip_error_get_sys_type)(struct ZipIFace *Self, zip_int32_t ze);
	zip_int32_t APICALL (*zip_error_to_str)(struct ZipIFace *Self, STRPTR buf, zip_uint64_t len, zip_int32_t ze, zip_int32_t se);
	zip_int32_t APICALL (*zip_fclose)(struct ZipIFace *Self, zip_file_t * zf);
	zip_t * APICALL (*zip_fdopen)(struct ZipIFace *Self, zip_int32_t fd_orig, zip_int32_t _flags, zip_int32_t * zep);
	zip_int64_t APICALL (*zip_file_add)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR name, zip_source_t * source, zip_flags_t flags);
	void APICALL (*zip_file_error_clear)(struct ZipIFace *Self, zip_file_t * zf);
	void APICALL (*zip_file_error_get)(struct ZipIFace *Self, zip_file_t * zf, zip_int32_t * zep, zip_int32_t * sep);
	zip_int32_t APICALL (*zip_file_extra_field_delete)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_uint16_t ef_idx, zip_flags_t flags);
	zip_int32_t APICALL (*zip_file_extra_field_delete_by_id)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_uint16_t ef_id, zip_uint16_t ef_idx, zip_flags_t flags);
	zip_int32_t APICALL (*zip_file_extra_field_set)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_uint16_t ef_id, zip_uint16_t ef_idx, const zip_uint8_t * data, zip_uint16_t len, zip_flags_t flags);
	zip_int16_t APICALL (*zip_file_extra_fields_count)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_flags_t flags);
	zip_int16_t APICALL (*zip_file_extra_fields_count_by_id)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_uint16_t ef_id, zip_flags_t flags);
	const zip_uint8_t * APICALL (*zip_file_extra_field_get)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_uint16_t ef_idx, zip_uint16_t * idp, zip_uint16_t * lenp, zip_flags_t flags);
	const zip_uint8_t * APICALL (*zip_file_extra_field_get_by_id)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_uint16_t ef_id, zip_uint16_t ef_idx, zip_uint16_t * lenp, zip_flags_t flags);
	CONST_STRPTR APICALL (*zip_file_get_comment)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_uint32_t * lenp, zip_flags_t flags);
	zip_int32_t APICALL (*zip_file_get_external_attributes)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_flags_t flags, zip_uint8_t * opsys, zip_uint32_t * attributes);
	zip_int32_t APICALL (*zip_file_rename)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, CONST_STRPTR name, zip_flags_t flags);
	zip_int32_t APICALL (*zip_file_replace)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_source_t * source, zip_flags_t flags);
	zip_int32_t APICALL (*zip_file_set_comment)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, CONST_STRPTR comment, zip_uint16_t len, zip_flags_t flags);
	zip_int32_t APICALL (*zip_file_set_external_attributes)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_flags_t flags, zip_uint8_t opsys, zip_uint32_t attributes);
	CONST_STRPTR APICALL (*zip_file_strerror)(struct ZipIFace *Self, zip_file_t * zf);
	zip_file_t * APICALL (*zip_fopen)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR fname, zip_flags_t flags);
	zip_file_t * APICALL (*zip_fopen_encrypted)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR fname, zip_flags_t flags, CONST_STRPTR password);
	zip_file_t * APICALL (*zip_fopen_index)(struct ZipIFace *Self, zip_t * za, zip_uint64_t index, zip_flags_t flags);
	zip_file_t * APICALL (*zip_fopen_index_encrypted)(struct ZipIFace *Self, zip_t * za, zip_uint64_t index, zip_flags_t flags, CONST_STRPTR password);
	zip_int64_t APICALL (*zip_fread)(struct ZipIFace *Self, zip_file_t * zf, APTR outbuf, zip_uint64_t toread);
	CONST_STRPTR APICALL (*zip_get_archive_comment)(struct ZipIFace *Self, zip_t * za, zip_int32_t * lenp, zip_flags_t flags);
	zip_int32_t APICALL (*zip_get_archive_flag)(struct ZipIFace *Self, zip_t * za, zip_uint32_t flag, zip_flags_t flags);
	CONST_STRPTR APICALL (*zip_get_name)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_flags_t flags);
	zip_int64_t APICALL (*zip_get_num_entries)(struct ZipIFace *Self, zip_t * za, zip_flags_t flags);
	zip_int64_t APICALL (*zip_name_locate)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR fname, zip_flags_t flags);
	zip_t * APICALL (*zip_open)(struct ZipIFace *Self, CONST_STRPTR fn, zip_int32_t _flags, zip_int32_t * zep);
	zip_int32_t APICALL (*zip_set_archive_comment)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR comment, zip_uint16_t len);
	zip_int32_t APICALL (*zip_set_archive_flag)(struct ZipIFace *Self, zip_t * za, zip_uint32_t flag, zip_int32_t value);
	zip_int32_t APICALL (*zip_set_default_password)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR passwd);
	zip_int32_t APICALL (*zip_set_file_compression)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_int32_t method, zip_flags_t flags);
	zip_source_t * APICALL (*zip_source_buffer)(struct ZipIFace *Self, zip_t * za, CONST_APTR data, zip_uint64_t len, zip_int32_t freep);
	zip_source_t * APICALL (*zip_source_file)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR fname, zip_uint64_t start, zip_int64_t len);
	zip_source_t * APICALL (*zip_source_filep)(struct ZipIFace *Self, zip_t * za, FILE * file, zip_uint64_t start, zip_int64_t len);
	void APICALL (*zip_source_free)(struct ZipIFace *Self, zip_source_t * src);
	zip_source_t * APICALL (*zip_source_function)(struct ZipIFace *Self, zip_t * za, zip_source_callback zcb, APTR ud);
	zip_source_t * APICALL (*zip_source_zip)(struct ZipIFace *Self, zip_t * za, zip_t * srcza, zip_uint64_t srcidx, zip_flags_t flags, zip_uint64_t start, zip_int64_t len);
	zip_int32_t APICALL (*zip_stat)(struct ZipIFace *Self, zip_t * za, CONST_STRPTR fname, zip_flags_t flags, zip_stat_t * st);
	zip_int32_t APICALL (*zip_stat_index)(struct ZipIFace *Self, zip_t * za, zip_uint64_t index, zip_flags_t flags, zip_stat_t * st);
	void APICALL (*zip_stat_init)(struct ZipIFace *Self, zip_stat_t * st);
	CONST_STRPTR APICALL (*zip_strerror)(struct ZipIFace *Self, zip_t * za);
	zip_int32_t APICALL (*zip_unchange)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx);
	zip_int32_t APICALL (*zip_unchange_all)(struct ZipIFace *Self, zip_t * za);
	zip_int32_t APICALL (*zip_unchange_archive)(struct ZipIFace *Self, zip_t * za);
	zip_error_t * APICALL (*zip_get_error)(struct ZipIFace *Self, zip_t * za);
	int APICALL (*zip_error_code_zip)(struct ZipIFace *Self, const zip_error_t * error);
	int APICALL (*zip_error_code_system)(struct ZipIFace *Self, const zip_error_t * error);
	void APICALL (*zip_error_fini)(struct ZipIFace *Self, zip_error_t * error);
	void APICALL (*zip_error_init)(struct ZipIFace *Self, zip_error_t * error);
	void APICALL (*zip_error_init_with_code)(struct ZipIFace *Self, zip_error_t * error, int ze);
	void APICALL (*zip_error_set)(struct ZipIFace *Self, zip_error_t * error, int ze, int se);
	const char * APICALL (*zip_error_strerror)(struct ZipIFace *Self, zip_error_t * error);
	int APICALL (*zip_error_system_type)(struct ZipIFace *Self, const zip_error_t * error);
	zip_int64_t APICALL (*zip_error_to_data)(struct ZipIFace *Self, const zip_error_t * error, void * data, zip_uint64_t length);
	zip_t * APICALL (*zip_open_from_source)(struct ZipIFace *Self, zip_source_t * zs, int flags, zip_error_t * ze);
	int APICALL (*zip_file_set_encryption)(struct ZipIFace *Self, zip_t * za, zip_uint64_t idx, zip_uint16_t method, const char * password);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* ZIP_INTERFACE_DEF_H */
