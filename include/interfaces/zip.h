#ifndef ZIP_INTERFACE_DEF_H
#define ZIP_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.35.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_ZIP_H
#include <libraries/zip.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct ZipIFace
{
	struct InterfaceData Data;

	APICALL uint32 (*Obtain)(struct ZipIFace *Self);
	APICALL uint32 (*Release)(struct ZipIFace *Self);
	APICALL void (*Expunge)(struct ZipIFace *Self);
	APICALL struct ZipIFace * (*Clone)(struct ZipIFace *Self);
	APICALL zip_int32_t (*zip_archive_set_tempdir)(struct ZipIFace *Self, zip_t * archive, const char * tempdir);
	APICALL zip_int32_t (*zip_close)(struct ZipIFace *Self, zip_t * archive);
	APICALL zip_int32_t (*zip_delete)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx);
	APICALL zip_int64_t (*zip_dir_add)(struct ZipIFace *Self, zip_t * archive, const char * name, zip_flags_t flags);
	APICALL void (*zip_discard)(struct ZipIFace *Self, zip_t * archive);
	APICALL void (*zip_error_clear)(struct ZipIFace *Self, zip_t * archive);
	APICALL void (*zip_error_get)(struct ZipIFace *Self, zip_t * archive, zip_int32_t * zep, zip_int32_t * sep);
	APICALL zip_int32_t (*zip_error_get_sys_type)(struct ZipIFace *Self, zip_int32_t ze);
	APICALL zip_int32_t (*zip_error_to_str)(struct ZipIFace *Self, char * buf, zip_uint64_t len, zip_int32_t ze, zip_int32_t se);
	APICALL zip_int32_t (*zip_fclose)(struct ZipIFace *Self, zip_file_t * file);
	APICALL zip_t * (*zip_fdopen)(struct ZipIFace *Self, int fd, int flags, int * errorp);
	APICALL zip_int64_t (*zip_file_add)(struct ZipIFace *Self, zip_t * archive, const char * name, zip_source_t * source, zip_flags_t flags);
	APICALL void (*zip_file_error_clear)(struct ZipIFace *Self, zip_file_t * file);
	APICALL void (*zip_file_error_get)(struct ZipIFace *Self, zip_file_t * file, zip_int32_t * zep, zip_int32_t * sep);
	APICALL zip_int32_t (*zip_file_extra_field_delete)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_uint16_t ef_idx, zip_flags_t flags);
	APICALL zip_int32_t (*zip_file_extra_field_delete_by_id)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_uint16_t ef_id, zip_uint16_t ef_idx, zip_flags_t flags);
	APICALL zip_int32_t (*zip_file_extra_field_set)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_uint16_t ef_id, zip_uint16_t ef_idx, const zip_uint8_t * data, zip_uint16_t len, zip_flags_t flags);
	APICALL zip_int16_t (*zip_file_extra_fields_count)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_flags_t flags);
	APICALL zip_int16_t (*zip_file_extra_fields_count_by_id)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_uint16_t ef_id, zip_flags_t flags);
	APICALL const zip_uint8_t * (*zip_file_extra_field_get)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_uint16_t ef_idx, zip_uint16_t * idp, zip_uint16_t * lenp, zip_flags_t flags);
	APICALL const zip_uint8_t * (*zip_file_extra_field_get_by_id)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_uint16_t ef_id, zip_uint16_t ef_idx, zip_uint16_t * lenp, zip_flags_t flags);
	APICALL const char * (*zip_file_get_comment)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_uint32_t * lenp, zip_flags_t flags);
	APICALL zip_int32_t (*zip_file_get_external_attributes)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_flags_t flags, zip_uint8_t * opsys, zip_uint32_t * attributes);
	APICALL zip_int32_t (*zip_file_rename)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, const char * name, zip_flags_t flags);
	APICALL zip_int32_t (*zip_file_replace)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_source_t * source, zip_flags_t flags);
	APICALL zip_int32_t (*zip_file_set_comment)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, const char * comment, zip_uint16_t len, zip_flags_t flags);
	APICALL zip_int32_t (*zip_file_set_external_attributes)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_flags_t flags, zip_uint8_t opsys, zip_uint32_t attributes);
	APICALL const char * (*zip_file_strerror)(struct ZipIFace *Self, zip_file_t * file);
	APICALL zip_file_t * (*zip_fopen)(struct ZipIFace *Self, zip_t * archive, const char * fname, zip_flags_t flags);
	APICALL zip_file_t * (*zip_fopen_encrypted)(struct ZipIFace *Self, zip_t * archive, const char * fname, zip_flags_t flags, const char * password);
	APICALL zip_file_t * (*zip_fopen_index)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t index, zip_flags_t flags);
	APICALL zip_file_t * (*zip_fopen_index_encrypted)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t index, zip_flags_t flags, const char * password);
	APICALL zip_int64_t (*zip_fread)(struct ZipIFace *Self, zip_file_t * file, APTR outbuf, zip_uint64_t toread);
	APICALL const char * (*zip_get_archive_comment)(struct ZipIFace *Self, zip_t * archive, zip_int32_t * lenp, zip_flags_t flags);
	APICALL zip_int32_t (*zip_get_archive_flag)(struct ZipIFace *Self, zip_t * archive, zip_uint32_t flag, zip_flags_t flags);
	APICALL const char * (*zip_get_name)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_flags_t flags);
	APICALL zip_int64_t (*zip_get_num_entries)(struct ZipIFace *Self, zip_t * archive, zip_flags_t flags);
	APICALL zip_int64_t (*zip_name_locate)(struct ZipIFace *Self, zip_t * archive, const char * fname, zip_flags_t flags);
	APICALL zip_t * (*zip_open)(struct ZipIFace *Self, const char * path, int flags, int * errorp);
	APICALL zip_int32_t (*zip_set_archive_comment)(struct ZipIFace *Self, zip_t * archive, const char * comment, zip_uint16_t len);
	APICALL zip_int32_t (*zip_set_archive_flag)(struct ZipIFace *Self, zip_t * archive, zip_uint32_t flag, zip_int32_t value);
	APICALL zip_int32_t (*zip_set_default_password)(struct ZipIFace *Self, zip_t * archive, const char * passwd);
	APICALL zip_int32_t (*zip_set_file_compression)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_int32_t method, zip_flags_t flags);
	APICALL zip_source_t * (*zip_source_buffer)(struct ZipIFace *Self, zip_t * archive, CONST_APTR data, zip_uint64_t len, zip_int32_t freep);
	APICALL zip_source_t * (*zip_source_file)(struct ZipIFace *Self, zip_t * archive, const char * fname, zip_uint64_t start, zip_int64_t len);
	APICALL zip_source_t * (*zip_source_filep)(struct ZipIFace *Self, zip_t * archive, FILE * file, zip_uint64_t start, zip_int64_t len);
	APICALL void (*zip_source_free)(struct ZipIFace *Self, zip_source_t * src);
	APICALL zip_source_t * (*zip_source_function)(struct ZipIFace *Self, zip_t * archive, zip_source_callback zcb, APTR ud);
	APICALL zip_source_t * (*zip_source_zip)(struct ZipIFace *Self, zip_t * archive, zip_t * srcza, zip_uint64_t srcidx, zip_flags_t flags, zip_uint64_t start, zip_int64_t len);
	APICALL zip_int32_t (*zip_stat)(struct ZipIFace *Self, zip_t * archive, const char * fname, zip_flags_t flags, zip_stat_t * st);
	APICALL zip_int32_t (*zip_stat_index)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t index, zip_flags_t flags, zip_stat_t * st);
	APICALL void (*zip_stat_init)(struct ZipIFace *Self, zip_stat_t * st);
	APICALL const char * (*zip_strerror)(struct ZipIFace *Self, zip_t * archive);
	APICALL zip_int32_t (*zip_unchange)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx);
	APICALL zip_int32_t (*zip_unchange_all)(struct ZipIFace *Self, zip_t * archive);
	APICALL zip_int32_t (*zip_unchange_archive)(struct ZipIFace *Self, zip_t * archive);
	APICALL zip_error_t * (*zip_get_error)(struct ZipIFace *Self, zip_t * archive);
	APICALL int (*zip_error_code_zip)(struct ZipIFace *Self, const zip_error_t * error);
	APICALL int (*zip_error_code_system)(struct ZipIFace *Self, const zip_error_t * error);
	APICALL void (*zip_error_fini)(struct ZipIFace *Self, zip_error_t * error);
	APICALL void (*zip_error_init)(struct ZipIFace *Self, zip_error_t * error);
	APICALL void (*zip_error_init_with_code)(struct ZipIFace *Self, zip_error_t * error, int ze);
	APICALL void (*zip_error_set)(struct ZipIFace *Self, zip_error_t * error, int ze, int se);
	APICALL const char * (*zip_error_strerror)(struct ZipIFace *Self, zip_error_t * error);
	APICALL int (*zip_error_system_type)(struct ZipIFace *Self, const zip_error_t * error);
	APICALL zip_int64_t (*zip_error_to_data)(struct ZipIFace *Self, const zip_error_t * error, void * data, zip_uint64_t length);
	APICALL zip_t * (*zip_open_from_source)(struct ZipIFace *Self, zip_source_t * source, int flags, zip_error_t * ze);
	APICALL int (*zip_file_set_encryption)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, zip_uint16_t method, const char * password);
	APICALL void (*zip_register_progress_callback)(struct ZipIFace *Self, zip_t * archive, zip_progress_callback_t cb);
	APICALL int (*zip_register_progress_callback_with_state)(struct ZipIFace *Self, zip_t * archive, double precision, zip_progress_callback cb, void (*ud_free)(void *), void * ud);
	APICALL zip_error_t * (*zip_file_get_error)(struct ZipIFace *Self, zip_file_t * file);
	APICALL int (*zip_file_set_mtime)(struct ZipIFace *Self, zip_t * archive, zip_uint64_t idx, time_t mtime, zip_flags_t flags);
	APICALL zip_int8_t (*zip_fseek)(struct ZipIFace *Self, zip_file_t * file, zip_int64_t offset, int whence);
	APICALL zip_int64_t (*zip_ftell)(struct ZipIFace *Self, zip_file_t * file);
	APICALL int (*zip_source_begin_write)(struct ZipIFace *Self, zip_source_t * source);
	APICALL zip_source_t * (*zip_source_buffer_create)(struct ZipIFace *Self, const void * data, zip_uint64_t len, int freep, zip_error_t * error);
	APICALL int (*zip_source_close)(struct ZipIFace *Self, zip_source_t * source);
	APICALL int (*zip_source_commit_write)(struct ZipIFace *Self, zip_source_t * source);
	APICALL zip_error_t * (*zip_source_error)(struct ZipIFace *Self, zip_source_t * source);
	APICALL zip_source_t * (*zip_source_file_create)(struct ZipIFace *Self, const char * fname, zip_uint64_t start, zip_int64_t len, zip_error_t * error);
	APICALL zip_source_t * (*zip_source_filep_create)(struct ZipIFace *Self, FILE * file, zip_uint64_t start, zip_int64_t len, zip_error_t * error);
	APICALL zip_source_t * (*zip_source_function_create)(struct ZipIFace *Self, zip_source_callback fn, void * userdata, zip_error_t * error);
	APICALL int (*zip_source_is_deleted)(struct ZipIFace *Self, zip_source_t * source);
	APICALL void (*zip_source_keep)(struct ZipIFace *Self, zip_source_t * source);
	APICALL int (*zip_source_open)(struct ZipIFace *Self, zip_source_t * source);
	APICALL zip_int64_t (*zip_source_read)(struct ZipIFace *Self, zip_source_t * source, void * data, zip_uint64_t len);
	APICALL void (*zip_source_rollback_write)(struct ZipIFace *Self, zip_source_t * source);
	APICALL int (*zip_source_seek)(struct ZipIFace *Self, zip_source_t * source, zip_int64_t offset, int whence);
	APICALL zip_int64_t (*zip_source_seek_compute_offset)(struct ZipIFace *Self, zip_uint64_t offset, zip_uint64_t length, void * data, zip_uint64_t data_length, zip_error_t * error);
	APICALL int (*zip_source_seek_write)(struct ZipIFace *Self, zip_source_t * source, zip_int64_t offset, int whence);
	APICALL int (*zip_source_stat)(struct ZipIFace *Self, zip_source_t * source, zip_stat_t * zstat);
	APICALL zip_int64_t (*zip_source_tell)(struct ZipIFace *Self, zip_source_t * source);
	APICALL zip_int64_t (*zip_source_tell_write)(struct ZipIFace *Self, zip_source_t * source);
	APICALL zip_int64_t (*zip_source_write)(struct ZipIFace *Self, zip_source_t * source, const void * data, zip_uint64_t len);
	APICALL const char * (*zip_libzip_version)(struct ZipIFace *Self);
	APICALL zip_source_t * (*zip_source_buffer_fragment)(struct ZipIFace *Self, zip_t * archive, const zip_buffer_fragment_t * frags, zip_uint64_t nfrags, int freep);
	APICALL zip_source_t * (*zip_source_buffer_fragment_create)(struct ZipIFace *Self, const zip_buffer_fragment_t * frags, zip_uint64_t nfrags, int freep, zip_error_t * error);
	APICALL int (*zip_compression_method_supported)(struct ZipIFace *Self, zip_int32_t method, int compress);
	APICALL int (*zip_encryption_method_supported)(struct ZipIFace *Self, zip_uint16_t method, int encode);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* ZIP_INTERFACE_DEF_H */
